openapi: 3.0.0
info:
  title: Linkedin API
  version: 1.0.0
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  security:
    - BearerAuth: []

paths:
  /users/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            example:
              name: John Doe
              email: john@example.com
              password: securepassword
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              example:
                id: 1
                name: John Doe
                email: john@example.com
                created_at: '2023-11-23T17:07:46Z'
                updated_at: '2023-11-23T17:07:46Z'

  /users/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            example:
              email: john@example.com
              password: securepassword
      responses:
        '200':
          description: User logged in successfully
          headers:
            Authorization:
              description: Bearer token for authentication
              schema:
                type: string
                example: Bearer eyJhbGciOiJIUzI1NiIsIn...

  /users/me:
    get:
      summary: Get current user details
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                id: 1
                name: John Doe
                email: john@example.com
                created_at: '2023-11-23T17:07:46Z'
                updated_at: '2023-11-23T17:07:46Z'

  /job_profiles:
    get:
      summary: Get a list of job profiles
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - id: 1
                  title: Software Engineer
                  job_description: Exciting software development role
                  no_of_openings: 3
                  requirement: Bachelor's in Computer Science
                  skills_required: Ruby on Rails, JavaScript
                  company_id: 1
                  created_at: '2023-11-23T17:07:46Z'
                  updated_at: '2023-11-23T17:07:46Z'

    post:
      summary: Create a new job profile
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            example:
              title: Software Engineer
              job_description: Exciting software development role
              no_of_openings: 3
              requirement: Bachelor's in Computer Science
              skills_required: Ruby on Rails, JavaScript
              company_id: 1
      responses:
        '201':
          description: Job profile created successfully
          headers:
            Location:
              description: URL of the created resource
              schema:
                type: string
                example: /job_profiles/2

  /companies:
    get:
      summary: Get a list of companies
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              example:
                - id: 1
                  company_name: Example Company
                  sector: Technology
                  location: City, Country
                  establishment: 2000
                  user_id: 1
                  created_at: '2023-11-23T17:07:46Z'
                  updated_at: '2023-11-23T17:07:46Z'

    post:
      summary: Create a new company
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            example:
              company_name: Example Company
              sector: Technology
              location: City, Country
              establishment: 2000
              user_id: 1
      responses:
        '201':
          description: Company created successfully
          headers:
            Location:
              description: URL of the created resource
              schema:
                type: string
                example: /companies/1

